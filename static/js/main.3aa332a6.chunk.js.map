{"version":3,"sources":["modules/todos.selector.js","Components/mapObjectToArray.js","modules/todos.action.js","Components/todos.style.js","Components/Todos.js","App.js","modules/todos.reducer.js","index.js","store.js"],"names":["selectAllTasks","state","taskList","selectFilteredTasks","results","displayAll","displayDoneOnly","filter","task","done","selectDoneTasks","displayUndoneOnly","selectUndoneTasks","title","toLowerCase","includes","inputSearchTask","selectIsLoading","isLoading","selectIsError","isError","selectInputNewTask","inputNewTask","selectInputSearchTask","mapObjectToArray","obj","Object","entries","map","key","value","API_URL","ACTION_TYPES","FETCH_INIT_TASKS","dispatch","fetch","then","response","json","tasks","SET_FETCHED_TASKS","catch","error","SET_ERROR_TASKS","type","INPUT_NEW_TASK","inputValue","TodoContainer","styled","div","TodoTextInput","input","TodoButton","button","TodoButtonSelect","TodoButtonChange","TodoButtonErase","connect","filteredTasks","getTasks","displayDone","displayUndone","setInputNewTask","setInputSearchTask","sendNewTask","taskTitle","body","method","JSON","stringify","changeTaskStatus","CHANGE_TASK_STATUS","deleteTask","DELETE_TASK","props","useEffect","style","display","justifyContent","placeholder","onChange","e","target","onClick","length","listStyleType","textDecoration","fontStyle","cursor","padding","fontFamily","fontSize","fontWeight","App","className","INITIAL_STATE","action","initialState","store","createStore","reducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3aa332a6.chunk.js","sourcesContent":["export const selectAllTasks = (state) => {\n    return state.taskList;\n};\n\nexport const selectDoneTasks = (state) => {\n    return state.taskList.filter(task => task.done === true);\n};\n\nexport const selectUndoneTasks = (state) => {\n    return state.taskList.filter(task => task.done === false);\n};\n\nexport const selectFilteredTasks = (state) => {\n    let results = [];\n    if (state.displayAll) {\n        results = selectAllTasks(state);\n    } else if (state.displayDoneOnly) {\n        results = selectDoneTasks(state);\n    } else if (state.displayUndoneOnly) {\n        results = selectUndoneTasks(state);\n    }\n    return results.filter(task => {\n        return task.title.toLowerCase().includes(state.inputSearchTask.toLowerCase());\n    });\n};\n\nexport const selectIsLoading = (state) => {\n    return state.isLoading;\n};\n\nexport const selectIsError = (state) => {\n    return state.isError;\n};\n\nexport const selectDisplayAll = (state) => {\n    return state.displayAll;\n};\n\nexport const selectDisplayDone = (state) => {\n    return state.displayDone;\n};\n\nexport const selectDisplayUndone = (state) => {\n    return state.displayUndone;\n};\n\nexport const selectInputNewTask = (state) => {\n    return state.inputNewTask;\n};\n\nexport const selectInputSearchTask = (state) => {\n    return state.inputSearchTask;\n};","// this function maps an object into array of objects\n// and puts object keys into key property of array items\nconst mapObjectToArray = (obj) => (\n    Object.entries(obj || {})\n      .map(([key, value]) => (\n        typeof value === 'object' ?\n          {...value, key}\n          :\n          {key, value}\n      ))\n  )\n\n  export default mapObjectToArray;","import mapObjectToArray from '../Components/mapObjectToArray'\n\nexport const API_URL = 'https://todolist-f1f9a.firebaseio.com/tasks/'\n\nexport const ACTION_TYPES = {\n    FETCH_INIT_TASKS: 'FETCH_INIT_TASKS',\n    SET_FETCHED_TASKS: 'SET_FETCHED_TASKS',\n    SET_LOADING_TASKS: 'SET_LOADIND_TASKS',\n    SET_ERROR_TASKS: 'SET_ERROR_TASKS',\n    INPUT_NEW_TASK: 'INPUT_NEW_TASK',\n    ADD_NEW_TASK_TO_LIST: 'ADD_NEW_TASK_TO_LIST',\n    INPUT_SEARCH_TASK: 'INPUT_SEARCH_TASK',\n    CHANGE_TASK_STATUS: 'CHANGE_TASK_STATUS',\n    DELETE_TASK: 'DELETE_TASK',\n    DISPLAY_ALL: 'DISPLAY_ALL',\n    DISPLAY_DONE: 'DISPLAY_DONE',\n    DISPLAY_UNDONE: 'DISPLAY_UNDONE',\n};\n\nexport const FETCH_INIT_TASKS = () => {\n    return dispatch => {\n        return fetch(API_URL + '.json')\n        .then(response => response.json())\n        .then(tasks => mapObjectToArray(tasks))\n        .then(taskList => dispatch(SET_FETCHED_TASKS(taskList)))\n        .catch(error => dispatch(SET_ERROR_TASKS()))\n    }\n};\n\nexport const SET_FETCHED_TASKS = (taskList) => {\n    return {\n        type: ACTION_TYPES.SET_FETCHED_TASKS,\n        value: taskList\n    }\n};\n\nexport const SET_LOADING_TASKS = () => {\n    return {\n        type: ACTION_TYPES.SET_LOADING_TASKS,\n    }\n};\n\nexport const SET_ERROR_TASKS = () => {\n    return {\n        type: ACTION_TYPES.SET_ERROR_TASKS,\n    }\n};\n\nexport const DISPLAY_ALL = () => {\n    return {\n        type: ACTION_TYPES.DISPLAY_ALL,\n    }\n};\n\nexport const DISPLAY_DONE = () => {\n    return {\n        type: ACTION_TYPES.DISPLAY_DONE,\n    }\n};\n\nexport const DISPLAY_UNDONE = () => {\n    return {\n        type: ACTION_TYPES.DISPLAY_UNDONE,\n    }\n};\n\nexport const INPUT_NEW_TASK = (inputValue) => {\n    return {\n        type: ACTION_TYPES.INPUT_NEW_TASK,\n        value: inputValue,\n    }\n};\n\nexport const INPUT_SEARCH_TASK = (inputValue) => {\n    return {\n        type: ACTION_TYPES.INPUT_SEARCH_TASK,\n        value: inputValue,\n    }\n};\n\nexport const ADD_NEW_TASK_TO_LIST = (taskTitle) => {\n    return dispatch => {\n        const body = {title: taskTitle, done: false};\n        fetch(API_URL + \".json\", {\n            method: \"POST\",\n            body: JSON.stringify(body)\n        })\n        .then(() => dispatch(INPUT_NEW_TASK('')))\n        .then(() => dispatch(FETCH_INIT_TASKS()))\n    }\n};\n\nexport const CHANGE_TASK_STATUS = (task) => {\n    return dispatch => {\n        const body = { title: task.title, done: !task.done };\n        fetch(API_URL + task.key + \".json\", {\n            method: \"PUT\",\n            body: JSON.stringify(body)\n        })\n        .then(() => dispatch(FETCH_INIT_TASKS()))\n    }\n};\n\nexport const DELETE_TASK = (task) => {\n    return dispatch => {\n        fetch(API_URL + task.key + \".json\", {\n            method: \"DELETE\"\n        })\n        .then(() => dispatch(FETCH_INIT_TASKS()))\n    }\n};\n\n","import styled from \"styled-components\";\n\nexport const TodoContainer = styled.div`\n    text-align: center;\n    max-width: 1000px;\n    display: flex;\n    flex-direction: column;\n    background-color: #eef2f3;    \n    border: 1px solid black;\n    border-radius: 10px;   \n    padding: 10px;\n    margin: 2rem auto;    \n`;\n\nexport const TodoTextInput = styled.input`\n  margin-right: 0.5rem;\n  padding: 0.5rem;\n  font-size: 1.125rem;\n  border: 1px solid gray;    \n  border-radius: 5px;\n  width: 50%;\n  \n`;\n\nexport const TodoButton = styled.button`\n\tbox-shadow:inset 0px 1px 0px 0px #ffffff;\n\tbackground: linear-gradient(to bottom, #f9f9f9 5%, #e9e9e9 100%);\n\tbackground-color: #f9f9f9;\n\tborder-radius:6px;\n\tborder:1px solid gray;\n\tdisplay:inline-block;\n\tcursor:pointer;\n\tcolor:#1f1b1f;\n\tfont-family:Arial;\n\tfont-size: 1.125rem;\n\tfont-weight:bold;\n\tpadding: 0.5rem;\n\ttext-decoration:none;\n    text-shadow:0px 1px 0px #ffffff;       \n`;\n\nexport const TodoButtonSelect = styled.button`\n  border: none;\n  border-radius: 5px;\n  color: white;\n  padding: 10px;\n  text-align: center;\n  font-weight: bold;\n  text-decoration: none;\n  display: inline-block;\n  min-width: 50px;\n  align-self: center;\n  font-size: 1.5rem;\n  margin: 4px 2px;\n  cursor: pointer;\n  background-color: #757F9A;\n`;\n\nexport const TodoButtonChange = styled.button`\t\n\tbackground-color: #D7DDE8;\n\tborder-radius:6px;\n\tborder:1px solid gray;\n\tdisplay:inline-block;\n\tcursor:pointer;\n\tcolor:#1f1b1f;\n\tfont-family:Arial;\n\tfont-size: 1.125rem;\n\tfont-weight:bold;\n\tpadding: 0.5rem;\n\ttext-decoration:none;    \n`;\n\nexport const TodoButtonErase = styled.button`\t\n\tbackground-color: #D7DDE8;\n\tborder-radius:6px;\n\tborder:1px solid gray;\n\tdisplay:inline-block;\n\tcursor:pointer;\n\tcolor:#1f1b1f;\n\tfont-family: Arial;\n\tfont-size: 1.125rem;\n\tfont-weight:bold;\n\tpadding: 0.5rem;\n\ttext-decoration:none;         \n`;\n\n\n\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { selectAllTasks, selectFilteredTasks, selectIsLoading, selectIsError, selectInputNewTask, selectInputSearchTask } from '../modules/todos.selector';\nimport { FETCH_INIT_TASKS, DISPLAY_ALL, DISPLAY_DONE, DISPLAY_UNDONE, INPUT_NEW_TASK, INPUT_SEARCH_TASK, ADD_NEW_TASK_TO_LIST, CHANGE_TASK_STATUS, DELETE_TASK } from '../modules/todos.action';\nimport { TodoContainer, TodoTextInput, TodoButton, TodoButtonSelect, TodoButtonChange, TodoButtonErase } from './todos.style';\n\n\nconst Todos = (props) => {\n\n    useEffect(() => {\n        props.getTasks();\n    });\n\n    return (     \n        <TodoContainer>\n          <h2>TO DO LIST</h2>\n          <form style={{display: \"flex\",\n                        justifyContent: \"center\"}}>\n            <TodoTextInput\n                placeholder='wpisz zadanie'          \n                value={props.inputNewTask}\n                onChange={(e) => props.setInputNewTask(e.target.value)}\n            />\n            <br />         \n            <TodoButton           \n                onClick={() => props.sendNewTask(props.inputNewTask)}        \n            >\n            Dodaj do listy!\n            </TodoButton>\n          </form>\n          <br />\n          <hr/>\n          <div>            \n          <TodoTextInput\n            placeholder='szukaj...'    \n            value={props.inputSearchTask}\n            onChange={(e) => props.setInputSearchTask(e.target.value)}\n          /> \n          <TodoButton>Szukaj zadania</TodoButton>\n          </div>\n          <br />      \n          <br />\n          <div> Sortuj zadania:\n            <br/><br/>\n            <TodoButtonSelect onClick={props.displayAll}>Wszystkie</TodoButtonSelect>\n            <TodoButtonSelect onClick={props.displayDone}>Wykonane</TodoButtonSelect>\n            <TodoButtonSelect onClick={props.displayUndone}>Do wykonania</TodoButtonSelect>\n          </div>          \n          <br />         \n\n          {props.isError ?\n            'error!'\n            :\n            props.isLoading ?\n              'loading...'\n              :\n              props.taskList.length > 0 ?\n                <ul style={{listStyleType: \"none\"}}>\n                  {props.filteredTasks.length > 0 ?\n                    props.filteredTasks.map((task) => {\n                      return (\n                        <li key={task.key}>\n                          <div style={{display: \"flex\",\n                                        justifyContent: \"space-around\"}}>\n                            <TodoButtonChange onClick={() => props.changeTaskStatus(task)}>Zmień status</TodoButtonChange>\n                          <div style={{\n                                    textDecoration: task.done ? \"line-through\" : \"none\",\n                                    fontStyle: \"bold\",\n                                    cursor: \"pointer\",\n                                    padding: '5px',                                   \n                                    fontFamily: 'Arial',\n\t                                fontSize: '1.5rem',\n\t                                fontWeight: 'bold',\n                                }} onClick={() => props.changeTaskStatus(task)}>\n                            {task.done ? ` ${task.title}` : `${task.title}`}                           \n                          </div>                             \n                          <TodoButtonErase onClick={() => props.deleteTask(task)}>\n                              Usuń z listy\n                          </TodoButtonErase>  \n                          </div>             \n                          <hr/>                 \n                                              \n                        </li>\n                        \n                      )\n                    })\n                    :\n                    <p>Brak wyników do wyświetlenia, zmień kryteria wyszukiwania!</p>\n                  }\n                </ul>\n                :\n                <p></p>            \n          }\n        </TodoContainer> \n  )\n}\n\nconst mapStateToProps = state => ({\n    taskList: selectAllTasks(state),\n    filteredTasks: selectFilteredTasks(state),\n    isLoading: selectIsLoading(state),\n    isError: selectIsError(state),\n    inputNewTask: selectInputNewTask(state),\n    inputSearchTask: selectInputSearchTask(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getTasks: () => dispatch(FETCH_INIT_TASKS()),\n    displayAll: () => dispatch(DISPLAY_ALL()),\n    displayDone: () => dispatch(DISPLAY_DONE()),\n    displayUndone: () => dispatch(DISPLAY_UNDONE()),\n    setInputNewTask: (value) => dispatch(INPUT_NEW_TASK(value)),\n    setInputSearchTask: (value) => dispatch(INPUT_SEARCH_TASK(value)),\n    sendNewTask: (title) => dispatch(ADD_NEW_TASK_TO_LIST(title)),\n    changeTaskStatus: (task) => dispatch(CHANGE_TASK_STATUS(task)),\n    deleteTask: (task) => dispatch(DELETE_TASK(task)),\n});\n\n\nexport default connect (mapStateToProps, mapDispatchToProps)(Todos);","import React from 'react';\nimport './App.css';\nimport Todos from './Components/Todos';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todos />\n    </div>\n  );\n}\n\nexport default App;\n","import { ACTION_TYPES } from \"./todos.action\";\n\nconst INITIAL_STATE = {\n    taskList: [],\n    isLoading: true,\n    isError: false,\n    displayAll: true,\n    displayDoneOnly: false,\n    displayUndoneOnly: false,\n    inputNewTask: \"\",\n    inputSearchTask: ''\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case ACTION_TYPES.SET_FETCHED_TASKS:\n            return state = {    \n                ...state,\n                taskList: action.value,\n                isLoading: false,\n                isError: false,\n            };\n        case ACTION_TYPES.SET_LOADING_TASKS:\n            return state = {\n                ...state,\n                taskList: [],\n                isLoading: true,\n                isError: false,\n            };\n        case ACTION_TYPES.SET_ERROR_TASKS:\n            return state = {\n                ...state,\n                taskList: [],\n                isLoading: false,\n                isError: true,\n            };\n        case ACTION_TYPES.DISPLAY_ALL:\n            return state = {\n                ...state,\n                displayAll: true,\n                displayDoneOnly: false,\n                displayUndoneOnly: false,\n            };\n        case ACTION_TYPES.DISPLAY_DONE:\n            return state = {\n                ...state,\n                displayAll: false,\n                displayDoneOnly: true,\n                displayUndoneOnly: false,\n            };\n        case ACTION_TYPES.DISPLAY_UNDONE:\n            return state = {\n                ...state,\n                displayAll: false,\n                displayDoneOnly: false,\n                displayUndoneOnly: true,\n            };\n        case ACTION_TYPES.INPUT_NEW_TASK:\n            return state = {\n                ...state,\n                inputNewTask: action.value,\n            };\n        case ACTION_TYPES.INPUT_SEARCH_TASK:\n            return state = {\n                ...state,            \n                inputSearchTask: action.value,\n            };\n        default:\n            return state;\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);","import { createStore, compose, applyMiddleware } from 'redux';\nimport reducer from './modules/todos.reducer';\nimport thunk from 'redux-thunk';\n\nexport default function configureStore(initialState) {\n  return createStore(\n    reducer,\n    initialState,\n    compose(\n      applyMiddleware(thunk),\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  )\n};"],"sourceRoot":""}